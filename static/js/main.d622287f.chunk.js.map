{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","color","onClick","document","body","style","backgroundColor","role","placeholder","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","console","log","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","aboutText","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d622287f.chunk.js","sourcesContent":["//PRESS \"rfc\" TO present the \" React function base components\"\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  const bgGreen=()=>{\r\n   document.body.style.backgroundColor='green';\r\n  }\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" color='white'>Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\" color='white'>About</a>\r\n        </li> */}\r\n       \r\n        \r\n      </ul>\r\n      <button type=\"button\" className=\"btn btn-success\" onClick={bgGreen}>Green</button>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n          {/* <div className=\"form-check form-switch\" >\r\n      <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\"onClick={props.togglemode}>Enable Dark Mode</label>\r\n    </div> */}\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n   \r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes/*This 'p' should be in small*/={title:PropTypes.string.isRequired,  aboutText:PropTypes.string }\r\n\r\n    //Default propts\r\n\r\n    Navbar.defaultProps = {\r\n        title: 'Stranger'\r\n      };","import React, {useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState('');\r\n  \r\n   const handleUp=()=>{\r\n        console.log(\"up clicked\"+ text);\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upper case\",\"Success\");\r\n    }\r\n   const handleLo=()=>{\r\n        console.log(\"Lo clicked\"+ text);\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower case\",\"Success\");\r\n    }\r\n    const clrText=()=>{\r\n      let newText=' ';\r\n      setText(newText);\r\n    }\r\n   \r\n    \r\n  const handleChange=(event)=>{\r\n        setText(event.target.value)\r\n        console.log(\"on change\");\r\n    }\r\n  \r\n  return (\r\n    <>\r\n    <div className='container'style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n   \r\n<div className=\"mb-3\">\r\n  \r\n  <textarea className=\"form-control\" id=\"myBox\" style={{backgroundColor:props.mode==='light'?'white':'grey', color:props.mode==='light'?'black':'white'}} value={text} onChange={handleChange} rows=\"10\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary \" onClick={handleUp}>Convert to Upper Case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLo}>Convert to Lower Case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={clrText}>Clear the Text</button>\r\n\r\n\r\n</div>\r\n\r\n<div className=\"container my-2\"style={{color:props.mode==='light'?'black':'white'}} >\r\n<h1>Your Text Summary here</h1>\r\n<p>{text.split(\" \").length} words, {text.length} characters</p>\r\n<p>{0.08*text.split(\" \").length} Minutes to Read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Enter something to preview\"}</p>\r\n\r\n</div>\r\n\r\n\r\n</>\r\n   \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert &&\r\n    <div>\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {props.alert.msg}:{props.alert.type}\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\n// import About from \"./Components/About\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter , Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n \n        <Navbar\n          title=\"TextUtils2\"\n          aboutText=\"TextAbouts\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-4\" mode={mode}>\n       \n             {/* <Route exact path=\"/about\" element={<About /> * */}\n          <TextForm showAlert={showAlert}heading=\"Enter Text to analyze \" mode={mode} />\n      \n        </div>\n   \n    </>\n  );\n  // return (\n  //   <>\n  //     {/* <Navbar title=\"TextUtils2\" aboutText=\"About\"/> */}\n  //     <Navbar title=\"Textutils\" mode={mode} togglemode={togglemode} />\n  //     <strong>\n  //       <Alert alert={alert} />\n  //     </strong>\n  //     <BrowserRouter>\n  //       <div className=\"container my-3\">\n  //         <Routes>\n  //           <Route path=\"/about\" element={<About />}/>\n\n  //           <Route path=\"/\" element={<TextForm\n  //               showAlert={showAlert}\n  //               heading=\"Enter your Text\"\n  //               mode={mode}\n  //             />}/>\n              \n           \n  //           </Routes>\n        \n  //       </div>\n  //       </BrowserRouter>\n      \n  //   </>\n  // );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}